[
    {
        "projectArea": "Software Engineering",
        "defaultExpand": false,
        "projectAreaDescription": "All of my software engineering projects are self-taught. I was already quite familiar with programming and Linux before starting these, which allowed me to complete them in a relatively short amount of time.",
        "colorConcept": "#ffffff0F",
        "projects": [
            {
                "type": "General",
                "title": "Seal Idea",
                "shortDescription": "A project stemming from a silly idea. It is built with PostgreSQL, Spring Boot (Java), and React (JavaScript), following a basic distributed architecture (Model-View-Controller). I also created a CI/CD pipeline to automate deployment: GitHub → Docker → AWS.",
                "fullDescription": {
                    "Link": "https://sealidea.com/",
                    "GitHub": "https://github.com/dthung99/Seal_Idea",
                    "Image": "https://github.com/dthung99/Seal_Idea/blob/main/images/demonstration_image.png?raw=true",
                    "Text-1": "Task: Idealization, design, development, testing, deployment.",
                    "Text-2": "Time: 3 weeks. Below are a snapshot of what I did:",
                    "Text-3": "Distributed Sytem: Implemented with a Model-View-Controller architecture using PostgreSQL - Spring Boot (Java) - React (JavaScript)",
                    "Text-4": "Network: Set up CORS to allow proxy traffic only from the front-end server; configured SSL certificates for HTTPS; established AWS VPC to allow only HTTPS traffic from users and forbid all other traffic to the backend or database.",
                    "Text-5": "Security: Developed authentication features including registration, login, logout, and password changes; executed stateless authentication by distributing a signed JWT in user cookies.",
                    "Text-6": "Databases: Designed a relational database schema with 3 tables (Accounts, Posts, and Personal Profile).",
                    "Text-7": "Backend: Developed a Spring Boot backend that communicates with the database using JPA (Hibernate) and interfaces with a React frontend (served on Nginx) via RESTful API. Integrated security functions using Spring Security.",
                    "Text-8": "Frontend: Designed a high-performance, responsive multi-page UI in React (optimized for screens as small as 320px) with a natural workflow to enhance user experience; evaluated UI/UX on different browsers and devices.",
                    "Text-9": "Website Features: Implemented multiple features: posting status, encrypting messages, personal list of posts, public API for developers.",
                    "Text-10": "AWS: Deployed SQL server on AWS RDS; deployed back-end and front-end servers on two different ports of AWS EC2; established remote control for AWS services via SSH.",
                    "Text-11": "CI/CD: Created two pipelines with GitHub Actions to automate testing, inject deployment variables, build Docker containers, and deploy to AWS via SSH connection."
                }
            },
            {
                "type": "General",
                "title": "My Portfolio Page",
                "shortDescription": "You are looking at it! It's just a simple 3-day project built with React and some CI/CD. What I like about it is the scalable design that allows me to update my data in a .json file.",
                "fullDescription": {
                    "Link": "https://dthung.xyz/",
                    "GitHub": "https://github.com/dthung99/portfolio",
                    "Image25%": "https://github.com/dthung99/Portfolio/blob/main/screenshot_images/illustration_image.jpg?raw=true",
                    "Text": "The page is hosted on GitHub Pages. It took me 2 days to learn and complete all the design, development, and deployment. There are two .json files that I can update to add new projects dynamically. Cool, isn't it?"
                }
            }
        ]
    },
    {
        "projectArea": "Artificial Intelligence",
        "defaultExpand": false,
        "projectAreaDescription": "Lots of my projects in AI are actually focused on the mathematics. I don't have a specific reason; I just want to understand all the underlying principles.",
        "colorConcept": "#ffffff0F",
        "projects": [
            {
                "type": "General",
                "title": "Liver Cancer Segmentation",
                "shortDescription": "Using U-Net for liver cancer segmentation. One of the challenges of this project is the small sample size (131 images), with each image being very large (512MB), along with the extreme imbalance of the cancer labels.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/U_Net_for_liver_tumor_segmentation",
                    "Text-1": "To handle the large images, I applied multiple strategies such as down sampling, cropping, and performed parallel training on two GPUs (Kaggle). The first network I used was a pure CNN without any regularization. Later, I added batch normalization and a dropout layer.",
                    "Text-2": "To address the small sample size, I performed augmentation with elastic deformations, added noise, and adjusted random contrast. For the data imbalance, I experimented with various loss functions, combining them to create my own custom loss function.",
                    "Text-3": "I trained the network using free Kaggle GPU, which was quite challenging due to the limited GPU memory of about 15GB per GPU and only 30 hours per week.",
                    "Image": "https://github.com/dthung99/U_Net_for_liver_tumor_segmentation/blob/main/images/final_prediction.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "Age Prediction for Neonatal Brain Images ",
                "shortDescription": "Age regression for neonatal brain images using the latent space from a VAE network. To enhance the effectiveness of the decoder for generation, I added a multi-attention head right after the latent layer.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/VAE_GAN_for_brain_MRI_images",
                    "Text-1": "It is a multitask training. The VAE ensures that the network extracts only the meaningful features into the latent space.",
                    "Text-2": "I later added a GAN (WGAN) network after the VAE. I learned that training a GAN is incredibly challenging, as my discriminator kept overfitting the data.",
                    "Text-3": "I noticed that using only a CNN network, the generator could not produce a proper image due to spatial invariance. I added a multi-attention head layer after the latent space to introduce some spatial variance to the network, and it worked great!",
                    "Image": "https://github.com/dthung99/VAE_GAN_for_brain_MRI_images/blob/main/images/Final_result.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "Transformer",
                "shortDescription": "Built a visual Swin Transformer from scratch for predicting the CIFAR-10 dataset. Most of the work involved building several multi-attention head layers and splitting the images into tokens.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/Transformer_from_scratch",
                    "Text-1": "Why didn't I try it on some text? Because I don't have the GPU and a large body of text data for it.",
                    "Text-2": "I did this because I wanted to learn about the attention mechanism.",
                    "Text-3": "You know what people say: 'Attention Is All You Need!'",
                    "Image": "https://github.com/dthung99/AI_small_project/blob/main/Transformer_from_scratch/image/result.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "VAE",
                "shortDescription": "An autoencoder network for the MNIST dataset, followed by a Variational Autoencoder (VAE) that forces the latent space to follow a normal distribution by minimizing the KL divergence.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/VAE_variational_autoencoder_from_scratch",
                    "Text": "I mainly just want to learn the Maths.",
                    "Text-1": "Recontructed image:",
                    "Image-1-50%": "https://github.com/dthung99/AI_small_project/blob/main/VAE_variational_autoencoder_from_scratch/images/generated_image.png?raw=true",
                    "Text-2": "Original image:",
                    "Image-2-50%": "https://github.com/dthung99/AI_small_project/blob/main/VAE_variational_autoencoder_from_scratch/images/raw_image.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "GAN",
                "shortDescription": "I implemented a GAN network and a WGAN with Gradient Penalty. Unfortunately, I only completed the math and the coding; I did not finish training them.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/WGAN_Wasserstein_Generative_Adversarial_Network_from_scratch"
                }
            },
            {
                "type": "General",
                "title": "LSTM & GRU",
                "shortDescription": "Building Long Short-Term Memory (LSTM) networks and Gated Recurrent Unit (GRU) networks from scratch to predict IBM's closing stock price over time. This project is primarily for understanding the architecture.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/LSTM_and_GRU_from_scratch",
                    "Text": "It's mainly for understanding the math.",
                    "Image": "https://github.com/dthung99/AI_small_project/blob/main/LSTM_and_GRU_from_scratch/images/result.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "U-Net",
                "shortDescription": "U-Net for segmentation of brain MRI images. This project is primarily for understanding the architecture.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/U-net_from_scratch",
                    "Text-1": "I built a U-net with 4 downsampling, 4 upsampling layers and skip connections between them.",
                    "Text-2": "Loss function: generalized dice loss.",
                    "Text-3": "Other details are given in the GitHub repository.",
                    "Image": "https://github.com/dthung99/AI_small_project/blob/main/U-net_from_scratch/images/result.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "Resnet",
                "shortDescription": "Resnet classification model for MNIST dataset. This project is primarily for understanding the architecture.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/Resnet_from_scratch",
                    "Text-1": "I Built a Resnet model with 4 residual layer, each one has 3 residual block with the first block downsampling and increasing the number of channels.",
                    "Text-2": "Loss function: cross entropy loss.",
                    "Image": "https://github.com/dthung99/AI_small_project/blob/main/Resnet_from_scratch/images/result.png?raw=true"
                }
            },
            {
                "type": "General",
                "title": "Stochastic Neural Network",
                "shortDescription": "A Stochastic Neural Network.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/Stochastic_Neural_Network_from_scratch",
                    "Text-1": "It's essentially a network with a dropout layer that persists in the final model. There is actually another approach involving Variational Bayesian inference, but I couldn't finish that.",
                    "Text-2": "It's actually been so long that I don't remember exactly what Variational Bayesian inference means. However, it's somewhat similar to Bayesian inference, except that you simplify the calculations by assuming that the weights follow a normal distribution given the data."
                }
            },
            {
                "type": "General",
                "title": "Backpropagation",
                "shortDescription": "Going for the math! Implementing backpropagation with NumPy!",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/AI_small_project/tree/main/Three_layer_Neural_network_from_scratch",
                    "Text-1": "PyTorch facilitates deep learning by keeping track of the computational graph, so backpropagation is not a problem when working with PyTorch.",
                    "Text-2": "To grasp the basics, I learned how to implement it using NumPy."
                }
            }
        ]
    },
    {
        "projectArea": "Robotics",
        "defaultExpand": false,
        "projectAreaDescription": "These are my main optional modules in my MSc. They are amazing! They have provided me with a strong understanding of computer systems and valuable experience across multiple engineering disciplines.",
        "colorConcept": "#ffffff0F",
        "projects": [
            {
                "type": "General",
                "title": "Stereo Tracking System",
                "shortDescription": "A traditional computer vision project. It's actually 1/3 of my MSc thesis. The other part involves designing and manufacturing a concentric tube robot (I made a new one).",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/Thesis_Concentric_Tube_Robot",
                    "Text-1": "A little clarification: the main part of my thesis is the design and manufacturing of a concentric tube robot (yes, an entire robot - but it's a small one, haha). This involved conducting finite element analysis to design and fabricate the tube, as well as designing, 3D printing, and assembling an actuation system (both mechanical and electrical). All the information can be found in the report.",
                    "Image-1": "https://github.com/dthung99/Thesis_Concentric_Tube_Robot/raw/main/images/robot.jpg",
                    "Text-2": "I added the 3D tracking because I really wanted to learn about it and gain some coding experience in my thesis. I implemented it using ROS on a Linux computer.",
                    "Text-3": "I developed the algorithm using traditional computer vision approaches: Gaussian Mixture Models-based background subtraction and color segmentation, along with epipolar geometry. Here is my algorithm:",
                    "Image-2": "https://github.com/dthung99/Thesis_Concentric_Tube_Robot/raw/main/images/tracking_algorithm.png",
                    "Text-4": "You can find the details in my GitHub repository and my final report.",
                    "Text-5": "I also wrote a simulation for a simplified kinematics model of the concentric tube robot, but it's too much to mention here."
                }
            },
            {
                "type": "General",
                "title": "Haptics Device",
                "shortDescription": "A haptic device using the relation between motor torque and end-effector force: τ=J^T·F. To make it more challenging, I created software to generate a virtual environment, allowing the robot to simulate different environments in various locations.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/Advanced_Medical_Robotics_MSc_course",
                    "Text-1": "It's actually not that difficult. The robot is a 3DOF planar robot (making it a redundant robot for my purposes) controlled with ROS. Because it's planar, the kinematics are well known and easy to estimate.",
                    "Image": "https://github.com/dthung99/Advanced_Medical_Robotics_MSc_course/blob/main/images/robot.png?raw=true",
                    "Text-2": "For the environment-generating software, I built a simple UI that allows users to determine where and what kind of environment to add from a predefined set. This information is then stored in a 3-dimensional tensor to send to ROS.",
                    "Text-4": "I also developed a Jacobian-based control for the redundant robot (as an additional feature)."
                }
            },
            {
                "type": "General",
                "title": "Drawing Robot",
                "shortDescription": "A simple drawing robot with a PID controller implemented in Arduino and a kinematics solver in MATLAB, communicating via a serial buffer.",
                "fullDescription": {
                    "GitHub": "https://github.com/dthung99/Applied_Medical_Robotics_MSc_course",
                    "Text-1": "For the PID controller, I went a little further by diving into control theory. I added anti-windup for the integral component and a derivative filter for the derivative component, making my PID robust. I also included a feedforward loop when controlling the speed.",
                    "Text-2": "For the inverse kinematics, I solved it using both analytical and differential approaches.",
                    "Text-3": "For serial communication, I transmitted the current and target motor angles between the two systems.",
                    "Text-4": "Oh! I forgot to mention that the project also includes the design, 3D printing, and electronics assembly.",
                    "Image": "https://github.com/dthung99/Applied_Medical_Robotics_MSc_course/raw/main/images/robot.jpg"
                }
            }
        ]
    }
]